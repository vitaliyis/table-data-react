{"version":3,"sources":["components/Loader/Spinner.js","components/Table/UserInfo.js","redux/actions/actions.js","redux/actions/actionTypes.js","api/api.js","components/Pagination/Pagination1.js","components/Pagination/Pagination2.js","components/Pagination/Pagination3.js","components/Pagination/Pagination4.js","components/Pagination/PaginationContainer.js","components/Form/FormField.js","components/Form/FormAdd.js","components/Table/Table.js","components/Table/TableContainer.js","components/App.js","serviceWorker.js","redux/reducers/getData.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["Spinner","props","className","role","UserInfo","userData","id","firstName","lastName","email","phone","address","description","streetAddress","city","state","zip","isLoading","payload","type","getDataAC","updateSortData","setQuantityPage","setCurrentPage","getQuantityPage","data","length","Math","ceil","getDataSmall","dispatch","fetch","then","response","json","catch","err","console","log","getDataBig","Pagination1","currentPage","numberPages","aria-label","map","item","key","href","onClick","Pagination2","sizeChangePagination","Pagination3","leftMark","rightMark","Pagination4","PaginationContainer","quantityPage","i","push","FormField","userPlaceholder","inputName","userValue","onChange","error","getLength","placeholder","name","value","onKeyUp","FormAdd","useState","buttonDisabled","setButtonDisabled","setUserData","userErrors","setUserErrors","event","target","disabled","preventDefault","errors","test","Object","keys","getErrors","sortData","sort","prev","next","getLastId","updateData","Table","sortById","sortByFirstName","sortByLastName","sortByEmail","sortByPhone","dataCurrentPage","sortFields","scope","connect","getDataReducer","pagination","sizePage","showForm","setShowForm","useEffect","sortByUpNumber","Number","replace","sortByDownNumber","sortByString","conditionField","sortField","dataUpdate","sortByDown","beginPage","endPage","slice","getDataByCurrentPage","App","this","React","Component","Boolean","window","location","hostname","match","initialState","action","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8809df70.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Spinner = props => {\r\n  return(\r\n    <div className=\"spinner-border\" role=\"status\">\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\n\r\nconst UserInfo = props => {\r\n  const {id, firstName, lastName, email, phone, address, description} = props.userData\r\n  return (\r\n    <ul className=\"list-group\">\r\n      <li className=\"list-group-item\">ID: <b>{id}</b></li>\r\n      <li className=\"list-group-item\">Выбран пользователь: <b>{firstName} {lastName}</b></li>\r\n      <li className=\"list-group-item\">Описание: <b>{description}</b></li>\r\n      <li className=\"list-group-item\">Адрес проживания: <b>{address.streetAddress}</b></li>\r\n      <li className=\"list-group-item\">Город: <b>{address.city}</b></li>\r\n      <li className=\"list-group-item\">Провинция/штат: <b>{address.state}</b></li>\r\n      <li className=\"list-group-item\">Индекс: <b>{address.zip}</b></li>\r\n      <li className=\"list-group-item\">Email: <b>{email}</b></li>\r\n      <li className=\"list-group-item\">Телефон: <b>{phone}</b></li>\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default UserInfo","import {GET_DATA, IS_LOADING, SET_CURRENT_PAGE,\r\n  SET_QUANTITY_PAGE, UPDATE_DATA, UPDATE_SORT_DATA} from \"./actionTypes\";\r\nimport {fetchGetDataBig, fetchGetDataSmall} from \"../../api/api\";\r\n\r\n// actionCreators =======================================================\r\nexport const isLoading = payload => {\r\n  return {\r\n    type: IS_LOADING,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const getDataAC = payload => {\r\n  return {\r\n    type: GET_DATA,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateData = payload => {\r\n  return {\r\n    type: UPDATE_DATA,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateSortData = payload => {\r\n  return {\r\n    type: UPDATE_SORT_DATA,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setQuantityPage = payload => {\r\n  return {\r\n    type: SET_QUANTITY_PAGE,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const setCurrentPage = payload => {\r\n  return {\r\n    type: SET_CURRENT_PAGE,\r\n    payload\r\n  }\r\n}\r\n\r\nconst getQuantityPage = data => {\r\n  if (data.length) { return Math.ceil(data.length / 50) }\r\n}\r\n\r\n\r\n// thunkCreators =======================================================\r\nexport const getDataSmall = () => dispatch => {\r\n  dispatch(isLoading(true))\r\n  fetchGetDataSmall()\r\n    .then(data => {\r\n      dispatch(setCurrentPage(1))\r\n      dispatch(setQuantityPage(getQuantityPage(data)))\r\n      dispatch(getDataAC(data))\r\n      dispatch(updateSortData({id: null}))\r\n      dispatch(isLoading(false))\r\n    })\r\n}\r\n\r\nexport const getDataBig = () => dispatch => {\r\n  dispatch(isLoading(true))\r\n  fetchGetDataBig()\r\n    .then(data => {\r\n      dispatch(setCurrentPage(1))\r\n      dispatch(setQuantityPage(getQuantityPage(data)))\r\n      dispatch(getDataAC(data))\r\n      dispatch(updateSortData({id: null}))\r\n      dispatch(isLoading(false))\r\n    })\r\n}","export const IS_LOADING = \"IS_LOADING\"\r\nexport const GET_DATA = \"GET_DATA\"\r\nexport const UPDATE_DATA = \"UPDATE_DATA\"\r\nexport const UPDATE_SORT_DATA = \"UPDATE_SORT_DATA\"\r\nexport const UPDATE_SORT_ID = \"UPDATE_SORT_ID\"\r\nexport const SET_QUANTITY_PAGE = \"SET_QUANTITY_PAGE\"\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\n","export const fetchGetDataSmall = () => {\r\n  return fetch(`http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D`)\r\n    .then(response => response.json())\r\n    .catch(err => console.log('Error small data: ', err))\r\n}\r\n\r\nexport const fetchGetDataBig = () => {\r\n  return fetch(`http://www.filltext.com/?rows=1000&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&delay=3&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D`)\r\n    .then(response => response.json())\r\n    .catch(err => console.log('Error big data: ', err))\r\n}","import React from 'react'\r\n\r\nconst Pagination1 = (props) => {\r\n  const {currentPage, numberPages, setCurrentPage} = props\r\n\r\n\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul className=\"pagination\">\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : <li className=\"page-item\" key={item}>\r\n              <a className=\"page-link\"\r\n                 href=\"#\"\r\n                 onClick={() => setCurrentPage(item)}\r\n              >{item}\r\n              </a>\r\n            </li>\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination1","import React from 'react'\r\n\r\nconst Pagination2 = (props) => {\r\n  const {currentPage, numberPages, sizeChangePagination, setCurrentPage} = props\r\n\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul className=\"pagination\">\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item <= sizeChangePagination + 1//<= 5\r\n                ? <li className=\"page-item\" key={item}>\r\n                <a className=\"page-link\"\r\n                   href=\"#\"\r\n                   onClick={() => setCurrentPage(item)}\r\n                >{item}</a></li>\r\n                : null\r\n        })}\r\n        <li className=\"page-item\" key={numberPages.length - 2}><span className=\"page-link\">...</span></li>\r\n        <li className=\"page-item\" key={numberPages.length - 1}>\r\n          <a className=\"page-link\"\r\n             href=\"#\"\r\n             onClick={() => setCurrentPage(numberPages.length)}\r\n          >{numberPages.length}</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination2","import React from 'react'\r\n\r\nconst Pagination3 = (props) => {\r\n  const {currentPage, numberPages, setCurrentPage} = props\r\n\r\n  const leftMark = currentPage - 2\r\n  const rightMark = currentPage + 2\r\n\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\" key={1}>\r\n          <a className=\"page-link\"\r\n             href=\"#\"\r\n             onClick={() => setCurrentPage(1)}\r\n          >{1}</a>\r\n        </li>\r\n        <li className=\"page-item\" key={2}><span className=\"page-link\">...</span></li>\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item >= leftMark && item <= rightMark\r\n              ? <li className=\"page-item\" key={item}>\r\n                  <a className=\"page-link\"\r\n                     href=\"#\"\r\n                     onClick={() => setCurrentPage(item)}\r\n                  >{item}</a>\r\n                </li>\r\n              : null\r\n        })}\r\n        <li className=\"page-item\" key={numberPages.length - 2}><span className=\"page-link\">...</span></li>\r\n        <li className=\"page-item\" key={numberPages.length - 1}>\r\n          <a className=\"page-link\"\r\n             href=\"#\"\r\n             onClick={() => setCurrentPage(numberPages.length)}\r\n          >{numberPages.length}</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination3","import React from 'react'\r\n\r\nconst Pagination4 = (props) => {\r\n  const {currentPage, numberPages, sizeChangePagination, setCurrentPage} = props\r\n\r\n  return (\r\n    <nav aria-label=\"...\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\" key={1}>\r\n          <a className=\"page-link\"\r\n             href=\"#\"\r\n             onClick={() => setCurrentPage(1)}\r\n          >{1}</a>\r\n        </li>\r\n        <li className=\"page-item\" key={2}><span className=\"page-link\">...</span></li>\r\n        {numberPages.map(item => {\r\n          return currentPage === item\r\n            ? <li className=\"page-item active\" key={item}><span className=\"page-link\">{item}</span></li>\r\n            : item >= numberPages.length - sizeChangePagination\r\n              ? <li className=\"page-item\" key={item}>\r\n                  <a className=\"page-link\"\r\n                     href=\"#\"\r\n                     onClick={() => setCurrentPage(item)}\r\n                  >{item}</a>\r\n                </li>\r\n              : null\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Pagination4","import React, {Fragment} from 'react'\r\nimport Pagination1 from \"./Pagination1\";\r\nimport Pagination2 from \"./Pagination2\";\r\nimport Pagination3 from \"./Pagination3\";\r\nimport Pagination4 from \"./Pagination4\";\r\n\r\nconst PaginationContainer = (props) => {\r\n  const {quantityPage, currentPage, setCurrentPage} = props\r\n\r\n  const lengthPagination = 7\r\n  const sizeChangePagination = 4    // если currentPage выходит за его предел то пагинация меняется\r\n\r\n  const numberPages = []\r\n  for (let i = 1; i <= quantityPage; i++) { numberPages.push(i) }\r\n\r\n  return (\r\n    <Fragment>\r\n\r\n      {quantityPage <= lengthPagination ?\r\n        <Pagination1\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage <= sizeChangePagination ?\r\n        <Pagination2\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          sizeChangePagination={sizeChangePagination}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage > sizeChangePagination &&\r\n        (numberPages.length - sizeChangePagination) >= currentPage?\r\n        <Pagination3\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n      {quantityPage > lengthPagination && currentPage > sizeChangePagination &&\r\n        (numberPages.length - sizeChangePagination) < currentPage ?\r\n        <Pagination4\r\n          currentPage={currentPage}\r\n          numberPages={numberPages}\r\n          sizeChangePagination={sizeChangePagination}\r\n          setCurrentPage={setCurrentPage}\r\n        /> : null}\r\n\r\n    </Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default PaginationContainer","import React from 'react'\r\n\r\nconst FormField = props => {\r\n\r\n  const {userPlaceholder, inputName, userValue, onChange, error, getLength} = props\r\n\r\n  return (\r\n    <div className=\"col-lg-auto  col-md-6 mb-2 mb-lg-0\">\r\n      <input\r\n        type=\"text\"\r\n        className={`form-control ${error ? \"is-invalid\" : null}`}\r\n        placeholder={userPlaceholder}\r\n        name={inputName}\r\n        value={userValue}\r\n        onChange={onChange}\r\n        onKeyUp={getLength}\r\n      />\r\n      <div className=\"invalid-feedback mt-0\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormField","import React, {useState} from 'react'\r\nimport FormField from \"./FormField\";\r\n\r\nconst FormAdd = props => {\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(true)\r\n\r\n  const [userData, setUserData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  })\r\n\r\n  const [userErrors, setUserErrors] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    email: false,\r\n    phone: false\r\n  })\r\n\r\n  const onChange = (event) => {\r\n    setUserData({...userData, [event.target.name]: event.target.value})\r\n    setUserErrors({...userErrors, [event.target.name]: false})\r\n  }\r\n\r\n  const getErrors = () => {\r\n    const errors = {}\r\n\r\n    // if (!userData.firstName.length) {errors.firstName= 'required'}\r\n    // if (!userData.lastName.length) {errors.lastName= 'required'}\r\n    if (!userData.lastName.length) {\r\n      errors.lastName= 'required'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(userData.email)) {\r\n      errors.email='Invalid email address'\r\n    }\r\n    // if (!userData.phone.length) {errors.phone= 'required'}\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      // setUserErrors({...userErrors, ...errors})\r\n      setUserErrors(errors)\r\n      return true\r\n    } else {\r\n      setUserErrors({})\r\n      return false\r\n    }\r\n  }\r\n\r\n  // Получение самого большого ID\r\n  const getLastId = data => {\r\n    const sortData = [...data]\r\n    sortData.sort((prev, next) => next.id - prev.id)\r\n\r\n    return sortData[0].id\r\n  }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault()\r\n    // вставить данные в data\r\n    if (!getErrors()) {\r\n\r\n      let id = getLastId(props.data)\r\n      const newUserData = {id: id + 1, ...userData}\r\n      const data = [newUserData, ...props.data]\r\n\r\n      props.updateData(data)\r\n      // обнуление сортировки\r\n      props.updateSortData({\r\n        id: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        phone: null\r\n      })\r\n      props.setCurrentPage(1)\r\n\r\n      // Очистка формы\r\n      setUserData({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\"\r\n      })\r\n    }\r\n      else {}\r\n\r\n  }\r\n\r\n  const getLength = () => {\r\n    let error = false\r\n\r\n    for (let key in userData){\r\n      if (userData[key].length === 0) { error = true}\r\n    }\r\n\r\n    error ? setButtonDisabled(true) : setButtonDisabled(false)\r\n\r\n  }\r\n\r\n  return (\r\n    <form className=\"mb-3 mt-3\">\r\n      <div className=\"form-row\">\r\n\r\n        <FormField\r\n          userPlaceholder=\"First Name\"\r\n          inputName=\"firstName\"\r\n          userValue={userData.firstName}\r\n          onChange={onChange}\r\n          error={userErrors.firstName}\r\n          getLength={getLength}\r\n        />\r\n\r\n        <FormField\r\n          userPlaceholder=\"Last Name\"\r\n          inputName=\"lastName\"\r\n          userValue={userData.lastName}\r\n          onChange={onChange}\r\n          error={userErrors.lastName}\r\n          getLength={getLength}\r\n        />\r\n\r\n        <FormField\r\n          userPlaceholder=\"Email\"\r\n          inputName=\"email\"\r\n          userValue={userData.email}\r\n          onChange={onChange}\r\n          error={userErrors.email}\r\n          getLength={getLength}\r\n        />\r\n\r\n        <FormField\r\n          userPlaceholder=\"Phone\"\r\n          inputName=\"phone\"\r\n          userValue={userData.phone}\r\n          onChange={onChange}\r\n          error={userErrors.phone}\r\n          getLength={getLength}\r\n        />\r\n\r\n        <div className=\"col-lg-auto col-md-12 text-left\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary w-100\"\r\n            disabled={buttonDisabled}\r\n            onClick={onSubmit}\r\n          >Add</button>\r\n        </div>\r\n\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport  default FormAdd","import React from 'react'\r\n\r\nconst Table = props => {\r\n\r\n  const {sortById, sortByFirstName, sortByLastName, sortByEmail, sortByPhone,\r\n    setUserData, userData, dataCurrentPage} = props\r\n  const {id, firstName, lastName, email, phone} = props.sortFields\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n        <tr>\r\n          <th scope=\"col\" className=\"text-nowrap\" onClick={sortById}>id {(id === null) ? null :  id ? <b>&uarr;</b> : <b>&darr;</b>}</th>\r\n          <th scope=\"col\" className=\"text-nowrap\" onClick={sortByFirstName}>First Name {(firstName === null) ? null :  firstName ? <b>&uarr;</b> : <b>&darr;</b>}</th>\r\n          <th scope=\"col\" className=\"text-nowrap\" onClick={sortByLastName}>Last Name {(lastName === null) ? null :  lastName ? <b>&uarr;</b> : <b>&darr;</b>}</th>\r\n          <th scope=\"col\" className=\"text-nowrap\" onClick={sortByEmail}>Email {(email === null) ? null :  email ? <b>&uarr;</b> : <b>&darr;</b>}</th>\r\n          <th scope=\"col\" className=\"text-nowrap\" onClick={sortByPhone}>Phone {(phone === null) ? null :  phone ? <b>&uarr;</b> : <b>&darr;</b>}</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {dataCurrentPage.map(item => {\r\n          return (\r\n            <tr key={item.id + item.phone}\r\n                onClick={() => setUserData(item)}\r\n                className={userData ? userData.id === item.id && userData.lastName === item.lastName ? \"table-primary\" : null : null}\r\n            >\r\n              <td>{item.id}</td>\r\n              <td>{item.firstName}</td>\r\n              <td>{item.lastName}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.phone}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import React, {Fragment, useState, useEffect} from 'react'\r\nimport Spinner from \"../Loader/Spinner\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrentPage, updateData, updateSortData} from \"../../redux/actions/actions\";\r\nimport PaginationContainer from \"../Pagination/PaginationContainer\";\r\nimport FormAdd from \"../Form/FormAdd\";\r\nimport Table from \"./Table\";\r\n\r\nconst TableContainer = props => {\r\n  const {data, isLoading, updateData, updateSortData, setCurrentPage} = props\r\n  const {id, firstName, lastName, email, phone} = props.sortFields\r\n  const {quantityPage, currentPage, sizePage} = props.pagination\r\n\r\n  // hooks\r\n  const [userData, setUserData] = useState(null)\r\n  const [showForm, setShowForm] = useState(false)\r\n  useEffect(() => {\r\n    setUserData(null)\r\n    setShowForm(false)\r\n  }, [isLoading])\r\n\r\n  const sortById = () => {\r\n    const dataUpdate = [...data]\r\n    if (!id) {\r\n      dataUpdate.sort((prev, next) => (prev.id - next.id))\r\n    } else {\r\n      dataUpdate.sort((prev, next) => (next.id - prev.id))\r\n    }\r\n    updateData(dataUpdate)\r\n    updateSortData({id: !id})\r\n  }\r\n\r\n  const sortByUpNumber = (prev, next) => {\r\n    return (Number(prev.phone.replace(/\\D/g, '')) - Number(next.phone.replace(/\\D/g, '')))\r\n  }\r\n\r\n  const sortByDownNumber = (prev, next) => {\r\n    return (Number(next.phone.replace(/\\D/g, '')) - Number(prev.phone.replace(/\\D/g, '')))\r\n  }\r\n\r\n  const sortByPhone = () => {\r\n    const dataUpdate = [...data]\r\n    !phone ? dataUpdate.sort(sortByUpNumber) : dataUpdate.sort(sortByDownNumber)\r\n\r\n    updateData(dataUpdate)\r\n    updateSortData({phone: !phone})\r\n  }\r\n\r\n  const sortByUp = key => (prev, next) => {\r\n    if (prev[key] < next[key]) return -1\r\n    if (prev[key] > next[key]) return 1\r\n  }\r\n\r\n  const sortByDown = key => (prev, next) => {\r\n    if (prev[key] > next[key]) return -1\r\n    if (prev[key] < next[key]) return 1\r\n  }\r\n\r\n  const sortByString = (conditionField, sortField) => {\r\n    const dataUpdate = [...data]\r\n    !conditionField ? dataUpdate.sort(sortByUp(sortField)) : dataUpdate.sort(sortByDown(sortField))\r\n    updateData(dataUpdate)\r\n    updateSortData({[sortField]: !conditionField})\r\n  }\r\n\r\n  const sortByFirstName = () => {\r\n    sortByString(firstName, 'firstName')\r\n  }\r\n\r\n  const sortByLastName = () => {\r\n    sortByString(lastName, 'lastName')\r\n  }\r\n\r\n  const sortByEmail = () => {\r\n    sortByString(email, 'email')\r\n  }\r\n\r\n  const getDataByCurrentPage = data => {\r\n    const beginPage = sizePage * currentPage - sizePage\r\n    const endPage = sizePage * currentPage\r\n    return data.slice(beginPage, endPage - 1)\r\n  }\r\n\r\n  const dataCurrentPage = data ? getDataByCurrentPage(data) : null\r\n\r\n  return(\r\n    <Fragment>\r\n      {isLoading ? <Spinner/> :\r\n        data ?\r\n          <div>\r\n            <div className=\"text-left mb-3\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => setShowForm(!showForm)}\r\n              >Add user</button>\r\n            </div>\r\n\r\n            {showForm ? <FormAdd\r\n                          updateData={updateData}\r\n                          data={data}\r\n                          updateSortData={updateSortData}\r\n                          setCurrentPage={setCurrentPage}\r\n                        /> : null}\r\n\r\n            { quantityPage > 1\r\n                ? <PaginationContainer\r\n                    currentPage={currentPage}\r\n                    quantityPage={quantityPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                  />\r\n                : null\r\n            }\r\n\r\n            <Table\r\n              sortById={sortById}\r\n              sortByFirstName={sortByFirstName}\r\n              sortByLastName={sortByLastName}\r\n              sortByEmail={sortByEmail}\r\n              sortByPhone={sortByPhone}\r\n              sortFields={props.sortFields}\r\n              dataCurrentPage={dataCurrentPage}\r\n              userData={userData}\r\n              setUserData={setUserData}\r\n            />\r\n\r\n            { quantityPage > 1\r\n              ? <PaginationContainer\r\n                currentPage={currentPage}\r\n                quantityPage={quantityPage}\r\n                setCurrentPage={setCurrentPage}\r\n              />\r\n              : null\r\n            }\r\n          </div>\r\n\r\n        : <div>Data not downloaded.</div>}\r\n\r\n      {userData ? <UserInfo userData={userData}/> : null}\r\n\r\n    </Fragment>\r\n\r\n\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.getDataReducer.data,\r\n    isLoading: state.getDataReducer.isLoading,\r\n    sortFields: state.getDataReducer.sortFields,\r\n    pagination: state.getDataReducer.pagination\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateData: (data) => dispatch(updateData(data)),\r\n    updateSortData: data => dispatch(updateSortData(data)),\r\n    setCurrentPage: currentPage => dispatch(setCurrentPage(currentPage))\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableContainer)","import React from 'react';\nimport {connect} from 'react-redux'\nimport TableContainer from \"./Table/TableContainer\";\nimport {getDataBig, getDataSmall} from \"../redux/actions/actions\";\n\nclass App extends React.Component{\n\n  render(){\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">Table</h1>\n        <div>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary mr-3\"\n            // className={`btn btn-primary mr-3 ${this.props.isLoading ? \"disabled\" : null} `}\n            onClick={this.props.getDataSmall}\n            disabled={this.props.isLoading}\n          >Small Data</button>\n          <button\n            type=\"button\"\n            className=\"btn btn-secondary mr-3\"\n            onClick={this.props.getDataBig}\n            disabled={this.props.isLoading}\n          >Big Data</button>\n        </div>\n\n        <div className=\"mt-3 text-center\">\n            <TableContainer/>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isLoading: state.getDataReducer.isLoading\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    getDataSmall: () => dispatch(getDataSmall()),\n    getDataBig: () => dispatch(getDataBig()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GET_DATA, IS_LOADING, SET_CURRENT_PAGE, SET_QUANTITY_PAGE, UPDATE_DATA,\r\n  UPDATE_SORT_DATA\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  data: null,\r\n  pagination: {\r\n    quantityPage: null,\r\n    currentPage: 1,\r\n    sizePage: 50\r\n  },\r\n  sortFields: {\r\n    id: null,\r\n    firstName: null,\r\n    lastName: null,\r\n    email: null,\r\n    phone: null\r\n  }\r\n}\r\n\r\nconst getDataReducer = (state = initialState, action) => {\r\n  switch (action.type){\r\n    case IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      }\r\n    case GET_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      }\r\n    case UPDATE_DATA:\r\n      return {\r\n        ...state,\r\n        data: action.payload\r\n      }\r\n    case UPDATE_SORT_DATA:\r\n      return {\r\n        ...state,\r\n        sortFields: {\r\n          id: null,\r\n          firstName: null,\r\n          lastName: null,\r\n          email: null,\r\n          phone: null,\r\n          ...action.payload\r\n        }\r\n      }\r\n    case SET_QUANTITY_PAGE:\r\n      return {\r\n        ...state,\r\n        pagination: {...state.pagination, quantityPage: action.payload}\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        pagination: {...state.pagination, currentPage: action.payload}\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n\r\n}\r\n\r\nexport default getDataReducer","import {combineReducers} from 'redux'\r\nimport getDataReducer from \"./reducers/getData.reducer\";\r\n\r\nexport default combineReducers({\r\n  getDataReducer\r\n})","import {createStore, applyMiddleware} from 'redux'\r\nimport rootReducer from './rootReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n\r\nwindow.store = store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}